#/!bin/bash

options=("1" "2" "3" "4" "5") 
echo 'Please choose an option' #выводит строку на экран
select input in "${options[@]}"; do #select нужен для создания меню со значениями из options
	case "$input" in #оператор case используют когда переменную нужно сравнить с большим количеством параметров
		"${options[0]}") #шаблон
			ls #команда которая выводит на экран список файлов и папок
			;; #завершение предложения (шаблон + команды)
		"${options[1]}")
			date $'+Time: %T\nDate: %D' #выводит на экран время в формате часы:миуты:секунды и дату в формате месяц/день/год
			;;
		"${options[2]}")
			read -p 'What file do you wish to check? ' finput #считывает введенную строку в переменную, выводя предварительное сообщение
			if [[ -d $finput ]]; then #начало условия. проверяет, существует ли файл, и является ли он директорией
				format='%s is a directory.\n'
			elif [[ -f $finput ]]; then #проверяет, существует ли файл, и является ли он файлом
				format='%s is a file.\n'
			else
				format='%s does not exist.\n' #присваевает переменной текст, подставляя в него имя файла
			fi                     #конец условий
			printf "$format" "$finput" #выводит на экран сообщение, полученное при выпонении цикла
			;;
		"${options[3]}")
			read -p 'Please enter filename: ' binput
			cp "$binput"{,.bak} #будет создана копия введенного файла, но с расширением .bak
			;;
		"${options[4]}")
			break #завершает цикл select
			;;
		*) #последний шаблон, к нему обращаются если другие не совпадают
			echo 'Not a valid option.' #выводит строку на экран
			;;
	esac #окончание оператора case
done
#в целом скрипт работает, но: 1. Не удалось создать копию файла, возможно нет доступа
                             #2. Нумерация в кейсе от 0 до 4, когда как в меню от 1 до 5
                             # ${options[0]} меняем на 1, остальные аналогично. Тоже работает и логичней